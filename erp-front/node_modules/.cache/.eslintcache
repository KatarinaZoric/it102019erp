[{"C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\index.js":"1","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\App.js":"2","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\pages\\UserOrders.js":"3","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\pages\\Category.js":"4","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\pages\\Cart.js":"5","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\pages\\Login.js":"6","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\pages\\Home.js":"7","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\pages\\Register.js":"8","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\pages\\Account.js":"9","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\pages\\Product.js":"10","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\config\\ReactRoutes.js":"11","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\pages\\Blog.js":"12","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\components\\Nav.js":"13","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\components\\Header.js":"14","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\components\\ProductList.js":"15","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\components\\HomeSlider.js":"16","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\services\\RegisterService.js":"17","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\services\\OrderService.js":"18","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\services\\ProductCategoryService.js":"19","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\services\\ProductService.js":"20","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\services\\LoginService.js":"21","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\services\\PplCategoryService.js":"22","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\services\\QuestionService.js":"23","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\services\\ReviewService.js":"24","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\services\\UserService.js":"25","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\utility\\UserUtility.js":"26","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\utility\\DateTimeUtility.js":"27","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\components\\Modals\\DeleteReview.js":"28","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\components\\Modals\\UpdateReview.js":"29","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\components\\Modals\\DeleteAccount.js":"30","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\components\\Modals\\UpdateMessage.js":"31","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\components\\Modals\\AddQuestion.js":"32","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\components\\Card.js":"33","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\config\\ApiRoutes.js":"34","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\components\\Modals\\AddProduct.js":"35","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\components\\Modals\\DeleteProduct.js":"36","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\components\\Modals\\UpdateProduct.js":"37","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\utility\\FileUtility.js":"38"},{"size":289,"mtime":1688425279195,"results":"39","hashOfConfig":"40"},{"size":2848,"mtime":1688425278897,"results":"41","hashOfConfig":"40"},{"size":3252,"mtime":1688425285876,"results":"42","hashOfConfig":"40"},{"size":3118,"mtime":1688425284477,"results":"43","hashOfConfig":"40"},{"size":2508,"mtime":1688425284178,"results":"44","hashOfConfig":"40"},{"size":2798,"mtime":1688425284970,"results":"45","hashOfConfig":"40"},{"size":3166,"mtime":1688425284744,"results":"46","hashOfConfig":"40"},{"size":3837,"mtime":1688425285624,"results":"47","hashOfConfig":"40"},{"size":6646,"mtime":1688425283596,"results":"48","hashOfConfig":"40"},{"size":8141,"mtime":1688425285294,"results":"49","hashOfConfig":"40"},{"size":409,"mtime":1688425283313,"results":"50","hashOfConfig":"40"},{"size":5149,"mtime":1688425283895,"results":"51","hashOfConfig":"40"},{"size":5545,"mtime":1688425280248,"results":"52","hashOfConfig":"40"},{"size":467,"mtime":1688425279758,"results":"53","hashOfConfig":"40"},{"size":1171,"mtime":1688425280532,"results":"54","hashOfConfig":"40"},{"size":739,"mtime":1688425279997,"results":"55","hashOfConfig":"40"},{"size":1215,"mtime":1688425288013,"results":"56","hashOfConfig":"40"},{"size":3046,"mtime":1688425286521,"results":"57","hashOfConfig":"40"},{"size":897,"mtime":1688425287148,"results":"58","hashOfConfig":"40"},{"size":3948,"mtime":1688425287447,"results":"59","hashOfConfig":"40"},{"size":1250,"mtime":1688425286206,"results":"60","hashOfConfig":"40"},{"size":491,"mtime":1688425286882,"results":"61","hashOfConfig":"40"},{"size":4872,"mtime":1688425287777,"results":"62","hashOfConfig":"40"},{"size":2933,"mtime":1688425288296,"results":"63","hashOfConfig":"40"},{"size":2251,"mtime":1688425288562,"results":"64","hashOfConfig":"40"},{"size":337,"mtime":1688425289380,"results":"65","hashOfConfig":"40"},{"size":195,"mtime":1688425288845,"results":"66","hashOfConfig":"40"},{"size":1437,"mtime":1688425281930,"results":"67","hashOfConfig":"40"},{"size":2607,"mtime":1688425282733,"results":"68","hashOfConfig":"40"},{"size":1388,"mtime":1688425281333,"results":"69","hashOfConfig":"40"},{"size":1746,"mtime":1688425282182,"results":"70","hashOfConfig":"40"},{"size":1561,"mtime":1688425281082,"results":"71","hashOfConfig":"40"},{"size":2951,"mtime":1688425279415,"results":"72","hashOfConfig":"40"},{"size":720,"mtime":1688425283046,"results":"73","hashOfConfig":"40"},{"size":5035,"mtime":1688425280768,"results":"74","hashOfConfig":"40"},{"size":1257,"mtime":1688425281647,"results":"75","hashOfConfig":"40"},{"size":5648,"mtime":1688425282466,"results":"76","hashOfConfig":"40"},{"size":749,"mtime":1688425289144,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lindkl",{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194"},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201"},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\index.js",[],[],"C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\App.js",["205"],[],"import Category from './pages/Category'\nimport ReactRoutes from './config/ReactRoutes'\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport UserOrders from './pages/UserOrders'\nimport Account from './pages/Account';\nimport Home from './pages/Home';\nimport Nav from './components/Nav';\nimport Product from './pages/Product';\nimport Blog from './pages/Blog';\nimport { useEffect, useState } from 'react';\nimport Cart from './pages/Cart';\nimport { Routes, Route } from 'react-router-dom';\nimport React from 'react';\n\n\nfunction App() {\n\n  const [cart, setCart] = useState([])\n  const [numberOfCartItems, setNumberOfCartItems] = useState(0)\n  const [cartTotalAmount, setCartTotalAmount] = useState(0)\n\n  const loadCartFromLocalStorage = () => {\n    let cartFromLocalStorage = localStorage.getItem(\"ButikCart\")\n\n    if (cartFromLocalStorage == null) {\n      return\n    }\n\n    setCart(JSON.parse(cartFromLocalStorage))\n  }\n\n  useEffect(() => {\n    loadCartFromLocalStorage()\n  }, [])\n\n  useEffect(() => {\n    let count = 0;\n    let sum = 0;\n\n    cart.forEach(c => {\n      count += parseInt(c.amount)\n      sum += parseInt(c.amount) * parseInt(c.product.price)\n    })\n\n    setNumberOfCartItems(count)\n    setCartTotalAmount(sum)\n\n    localStorage.setItem(\"ButikCart\", JSON.stringify(cart))\n  }, [cart])\n\n  const addToCart = (product, amount) => {\n    let tmpCart = [...cart]\n\n    tmpCart.push({\n      product: product,\n      amount: amount\n    })\n\n    setCart(tmpCart)\n  }\n\n  const deleteFromCart = productId => {\n    let tmpCart = [...cart]\n\n    setCart(tmpCart.filter(item => item.product.productID !== productId))\n  }\n\n  const updateCart = (productId, amount) => {\n    if (amount < 1) return\n\n    let tmpCart = [...cart]\n\n    tmpCart.forEach((item, index) => {\n      if (item.product.productID == productId) {\n        tmpCart[index].amount = amount\n      }\n    })\n\n    setCart(tmpCart)\n  }\n\n  const emptyCart = () => {\n    setCart([])\n  }\n\n  return (\n    <div>\n      <Nav numberOfCartItems={numberOfCartItems} cartTotalAmount={cartTotalAmount}/>\n\n      <Routes>\n      <Route path={ReactRoutes.HOME} element={<Home />} />\n      <Route path={ReactRoutes.ACCOUNT} element={<Account />} />\n      <Route path={ReactRoutes.MY_ORDERS} element={<UserOrders />} />\n      <Route path={ReactRoutes.PRODUCT} element={<Product addToCart={addToCart} />} />\n      <Route path={ReactRoutes.LOGIN} element={<Login />} />\n      <Route path={ReactRoutes.REGISTER} element={<Register />} />\n      <Route path={ReactRoutes.CATEGORY} element={<Category addToCart={addToCart} />} />\n      <Route path={ReactRoutes.BLOG} element={<Blog />} />\n      <Route path={ReactRoutes.CART} element={<Cart cart={cart} updateCart={updateCart} deleteFromCart={deleteFromCart} emptyCart={emptyCart} />} />\n      </Routes>\n\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\pages\\UserOrders.js",["206"],[],"import React, { useEffect, useState } from 'react'\r\nimport { OrderService } from '../services/OrderService'\r\nimport DateTimeUtility from '../utility/DateTimeUtility'\r\nimport UserUtility from '../utility/UserUtility'\r\n\r\n\r\nfunction UserOrders () {\r\n\r\n    const [orders, setOrders] = useState([])\r\n    let userId = localStorage.getItem(\"UserID\")\r\n\r\n    useEffect(() => {\r\n        if(UserUtility.isEmployee())\r\n        {\r\n            OrderService.getAllOrders()\r\n            .then(setOrders)\r\n        }\r\n        else {\r\n            OrderService.getAllOrdersForUser(userId)\r\n            .then(setOrders)\r\n            console.log(orders)\r\n        }   \r\n    },[])\r\n\r\n\r\n    function deleteOrder(orderId) {\r\n        OrderService.deleteOrder(orderId)\r\n        .then(response => \r\n            console.log(response))\r\n\r\n        window.location.reload();\r\n        \r\n    }\r\n    return (\r\n        <div style={{backgroundColor:\"#f7faf7\", margin:\"0\"}}>\r\n            <h2 className=\"d-flex align-items-center justify-content-center\" style={{padding: \"15px\"}}>Moje porudzbine</h2>\r\n            {orders.map(order => {\r\n                return (\r\n                <div>\r\n                    <table className=\"table table-striped table-dark\">\r\n                        <thead> \r\n                            <p>{UserUtility.isEmployee()? <span>{order.user.name} {order.user.surname}</span>: \"\"}</p>\r\n                            <tr className=\"d-flex\">\r\n                                <th className=\"col-1\">{DateTimeUtility.formatDate(order.date)}</th>\r\n                                <th className=\"col-2\">Proizvod</th>\r\n                                <th className=\"col-3\">Kolicina</th>\r\n                                <th className=\"col-4\">Cena po jedinici</th>\r\n                                <th className=\"col-2\" >Ukupna cena</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                                {order.orderItems.map(item => {\r\n                                    return (\r\n                                        <tr className=\"d-flex\">\r\n                                            <th className=\"col-1\"></th>\r\n                                            <td className=\"col-2\">{item.product.name}</td>\r\n                                            <td className=\"col-3\">{item.amount}</td>\r\n                                            <td className=\"col-4\">{item.price} RSD</td>\r\n                                            <td className=\"col-2\">{(item.price * item.amount).toFixed(2)} RSD</td>\r\n                                        </tr>\r\n                                        \r\n                                    )\r\n                                })}\r\n                        </tbody>\r\n                    </table>\r\n                    <div className=\"d-flex align-items-center justify-content-end\" style={{margin:\"20px\"}}>\r\n                        <h3 style={{marginRight:\"10px\"}}>Total: {order.total} RSD</h3>\r\n                        <button className=\"btn btn-danger me-3\" onClick={ () => deleteOrder(order.orderID)}>Obrisi porudzbinu</button>\r\n                    </div>\r\n                </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserOrders","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\pages\\Category.js",["207"],[],"import React, { useEffect } from 'react'\r\nimport {useState} from 'react'\r\nimport Header from '../components/Header'\r\nimport ProductList from '../components/ProductList'\r\nimport ProductService from '../services/ProductService'\r\nimport ProducCategorytService, { ProductCategoryService } from '../services/ProductCategoryService'\r\nimport { useParams } from 'react-router'\r\nimport PplCategoryService from '../services/PplCategoryService'\r\n\r\nfunction Category(props) {\r\n\r\n    const [products, setProducts] = useState([])\r\n    const [unfilteredProducts, setUnfilteredProducts] = useState([])\r\n    const [productCategories, setProductCategories] = useState([])\r\n    const [pplCategories, setPplCategories] = useState([])\r\n    const [currentCategory, setCurrentCategory] = useState(\"\")\r\n    const {categoryId} = useParams();\r\n\r\n    useEffect(() => {\r\n      changeProductList(categoryId)\r\n    }, [categoryId])\r\n\r\n    useEffect(() => {\r\n      Promise.all([\r\n        ProducCategorytService.getCategores(),\r\n        PplCategoryService.getPpls()\r\n      ])\r\n      .then(([productCategories, pplCategories]) => {\r\n        setProductCategories(productCategories)\r\n        setPplCategories(pplCategories)\r\n      })\r\n      .catch(console.error)\r\n    }, [])\r\n\r\n    function changeProductList(category) {\r\n      Promise.all([\r\n        ProductService.getProductByCategory(category),\r\n        ProductCategoryService.getCategoryById(category)\r\n      ])\r\n      .then(([products, category]) => {\r\n        setUnfilteredProducts(products)\r\n        setProducts(products);\r\n        setCurrentCategory(category.name);\r\n      })\r\n      .catch(console.error)\r\n    }\r\n\r\n    const filterProductsByPpl = (pplId) => {\r\n      let tmpProducts = [...unfilteredProducts]\r\n      let filteredProducts = []\r\n\r\n      tmpProducts.forEach(product => {\r\n        if (product.pplCategories !== null) {\r\n          product.pplCategories.forEach(pplCategory => {\r\n            if (pplCategory.pplCategoryID === pplId) {\r\n              filteredProducts.push(product)\r\n            }\r\n          })\r\n        }\r\n      })\r\n\r\n      setProducts(filteredProducts)\r\n    }\r\n\r\n    return(\r\n      <div>\r\n        <Header/>\r\n        <h5 className=\"text-center\">{currentCategory}</h5>\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"position-sticky col-12 col-lg-2 py-5\">\r\n              <div className=\"list-group\">\r\n                {pplCategories.map(pplCategory => {\r\n                  return <a key={\"pplFilter\" + pplCategory.pplCategoryID} onClick={() => filterProductsByPpl(pplCategory.pplCategoryID)} className=\"list-group-item list-group-item-action\">{pplCategory.name}</a>\r\n                })}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-lg-10\">\r\n              <ProductList\r\n                addToCart={props.addToCart}\r\n                products={products}\r\n                productCategories={productCategories}\r\n                pplCategories={pplCategories}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Category;","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\pages\\Cart.js",["208"],[],"import { useNavigate } from \"react-router\"\r\nimport ReactRoutes from \"../config/ReactRoutes\";\r\nimport { OrderService } from \"../services/OrderService\"\r\n\r\nconst Cart = ({cart, updateCart, deleteFromCart, emptyCart}) => {\r\n\r\n    const navigate = useNavigate();\r\n    const makeNewOrder = () => {\r\n        OrderService.makeOrder(cart)\r\n            .then(response => {\r\n                console.table(response)\r\n                emptyCart()\r\n                navigate(ReactRoutes.MY_ORDERS)\r\n            })\r\n            .catch(error => {\r\n                console.error(error)\r\n            })\r\n    }\r\n\r\n    const renderTable = () => {\r\n        return (\r\n            <div>\r\n                <table className=\"table table-striped\">\r\n                    <thead className=\"thead-light\">\r\n                        <tr>\r\n                            <th>Proizvod</th>\r\n                            <th>Kolicina</th>\r\n                            <th>Cena po jedinici</th>\r\n                            <th>Ukupna cena</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {cart.map(item => {\r\n                            return (\r\n                                <tr>\r\n                                    <td>{item.product.name}</td>\r\n                                    <td>{<input type=\"number\" style={{width: \"3rem\"}} value={item.amount} onChange={(e) => updateCart(item.product.productID, e.target.value)}></input>}</td>\r\n                                    <td>{item.product.price} rsd</td>\r\n                                    <td>{item.amount * item.product.price} rsd</td>\r\n                                    <td><button onClick={() => deleteFromCart(item.product.productID)} className=\"btn btn-danger btn-sm\">&#10006;</button></td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n\r\n                <div className=\"d-flex align-items-center justify-content-end mt-5\">\r\n                    <button onClick={emptyCart} className=\"btn btn-danger me-3\">Obrisi sve</button>\r\n                    <button onClick={makeNewOrder} className=\"btn btn-success\">Poruci</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {cart.length != 0 ? renderTable() : (<h1>Korpa je prazna!</h1>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\pages\\Login.js",[],[],"C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\pages\\Home.js",[],[],"C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\pages\\Register.js",[],[],"C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\pages\\Account.js",["209","210"],[],"import React, { useEffect, useState } from 'react'\r\nimport UserService from '../services/UserService'\r\nimport DeleteAccount from '../components/Modals/DeleteAccount'\r\n\r\nfunction Account() {\r\n    let userID = localStorage.getItem(\"UserID\");\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [surname, setSurname] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassord] = useState(\"\");\r\n    const [updateError, setUpdateError] = useState(\"\");\r\n    const [feedback, setFeedback] = useState(\"\");\r\n    const [errors, setErrors] = useState({\r\n        name: null,\r\n        surname: null,\r\n        email: null,\r\n        username: null,\r\n        password: null,\r\n        confirmPassword: null,\r\n        isValid: true,\r\n        general: null\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        UserService.getUserByID(userID)\r\n        .then(user => {\r\n            setName(user.name);\r\n            setSurname(user.surname);\r\n            setEmail(user.email);\r\n            setUsername(user.username);\r\n        })\r\n    }, [])\r\n\r\n\r\n    function validateInput() {\r\n        setUpdateError(\"\");\r\n        const tempErrors = {\r\n            name: null,\r\n            surname: null,\r\n            email: null,\r\n            username: null,\r\n            password: null,\r\n            confirmPassword: null,\r\n            isValid: true,\r\n            general: null\r\n        }\r\n        tempErrors.isValid = true\r\n\r\n        if(name === \"\") {\r\n            tempErrors.isValid = false;\r\n            tempErrors.name = \"Polje ime mora biti popunjeno\"\r\n        }\r\n        if(surname === \"\") {\r\n            tempErrors.isValid = false;\r\n            tempErrors.surname = \"Polje prezime mora biti popunjeno\"\r\n        }\r\n        if(email === \"\") {\r\n            tempErrors.isValid = false;\r\n            tempErrors.email = \"Polje email mora biti popunjeno\"\r\n        }\r\n        if(username === \"\") {\r\n            tempErrors.isValid = false;\r\n            tempErrors.username = \"Polje korisnicko ime mora biti popunjeno\"\r\n        }\r\n        if(password === \"\") {\r\n            tempErrors.isValid = false;\r\n            tempErrors.password = \"Polje lozinka lozinka je obavezno\"\r\n        }\r\n        if(confirmPassword === \"\") {\r\n            tempErrors.isValid = false;\r\n            tempErrors.confirmPassword = \"Polje potrvda lozinke lozinka je obavezno\"\r\n        }\r\n        if(password !== \"\" && confirmPassword !== \"\" && password !== confirmPassword)\r\n        {\r\n            tempErrors.isValid = false;\r\n            tempErrors.password = \"Lozinke se moraju podudarati\"\r\n            tempErrors.confirmPassword = \"Lozinke se moraju podudarati\"\r\n        }\r\n\r\n        setErrors(tempErrors)\r\n\r\n        return tempErrors.isValid;\r\n    }\r\n\r\n\r\n    function updateProfile() {\r\n        if(validateInput())\r\n        {\r\n            UserService.updateUser(userID, name, surname, email, username, password)\r\n            .then(response => (\r\n                console.log(response),\r\n                setFeedback(\"Uspesno ste izmenili profil\")\r\n            ))\r\n            .catch(error => {\r\n                setUpdateError(error)\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    return(\r\n        <div style={{margin:\"30px\"}}>\r\n            <div className=\"wrapper bg-white mt-sm-5\">\r\n            { /*<Link to='/category/1'><img src=\"/Assets/img/home2.png\" style={{width:\"30px\", height:\"30px\"}}/></Link> */}\r\n                <h4 className=\"pb-4 border-bottom\">Account settings</h4>\r\n                <div className=\"py-2\">\r\n                    <div className=\"row py-2\">\r\n                        <div className=\"col-md-6\"> <label htmlFor=\"firstname\">First Name { (!errors.isValid && errors.name) ? <span className=\"error\">{errors.name}</span> : \"\" }</label> <input onChange={e => setName(e.target.value)} type=\"text\" className=\"bg-light form-control\" value={name}/> </div>\r\n                        <div className=\"col-md-6 pt-md-0 pt-3\"> <label htmlFor=\"lastname\">Last Name{ (!errors.isValid && errors.surname) ? <span className=\"error\">{errors.surname}</span> : \"\" }</label> <input onChange={e => setSurname(e.target.value)} type=\"text\" className=\"bg-light form-control\" value={surname}/> </div>\r\n                    </div>\r\n                    <div className=\"row py-2\">\r\n                        <div className=\"col-md-6\"> <label htmlFor=\"email\">Email Address{ (!errors.isValid && errors.email) ? <span className=\"error\">{errors.email}</span> : \"\" }</label> <input onChange={e => setEmail(e.target.value)} type=\"text\" className=\"bg-light form-control\" value={email}/> </div>\r\n                        <div className=\"col-md-6 pt-md-0 pt-3\"> <label htmlFor=\"username\">Username{ (!errors.isValid && errors.username) ? <span className=\"error\">{errors.username}</span> : \"\" }</label> <input onChange={e => setUsername(e.target.value)} type=\"text\" className=\"bg-light form-control\" value={username}/> </div>\r\n                    </div>\r\n                    <div className=\"row py-2\">\r\n                        <div className=\"col-md-6\"> <label htmlFor=\"password\">Password{ (!errors.isValid && errors.password) ? <span className=\"error\">{errors.password}</span> : \"\" }</label> <input onChange={e => setPassword(e.target.value)} type=\"password\" className=\"bg-light form-control\" placeholder=\"password\"/> </div>\r\n                        <div className=\"col-md-6 pt-md-0 pt-3\"> <label htmlFor=\"username\">Confirm password{ (!errors.isValid && errors.confirmPassword) ? <span className=\"error\">{errors.confirmPassword}</span> : \"\" }</label> <input onChange={e => setConfirmPassord(e.target.value)} type=\"password\" className=\"bg-light form-control\" placeholder=\"password\"/> </div>\r\n                    </div>\r\n                    <p>{ (updateError !== \"\") ? <span className=\"error\">{updateError}</span> : \"\" }</p>\r\n                    <p>{(feedback !== \"\") ? <span style ={{color: \"green\"}}>{feedback}</span> : \"\"}</p>\r\n                    <div className=\"py-3 pb-4 border-bottom\"> <button onClick={updateProfile} className=\"btn btn-primary mr-3\">Save Changes</button> <button className=\"btn border button\">Cancel</button> </div>\r\n                    <div className=\"d-sm-flex align-items-center pt-3\" id=\"deactivate\">\r\n                        <div> \r\n                            <b>Deactivate your account</b>\r\n                        </div>\r\n                        <div className=\"ml-auto\"> <DeleteAccount />\r\n                             </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Account","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\pages\\Product.js",[],[],"C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\config\\ReactRoutes.js",[],[],"C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\pages\\Blog.js",["211","212"],[],"import {Accordion, Button, Card, ListGroup} from 'react-bootstrap'\r\nimport {useEffect, useState} from 'react'\r\nimport QuestionService from '../services/QuestionService';\r\nimport DateTimeUtility from '../utility/DateTimeUtility';\r\nimport UserUtility from '../utility/UserUtility';\r\nimport UpdateMessage from '../components/Modals/UpdateMessage'\r\nimport AddQuestion from '../components/Modals/AddQuestion'\r\n\r\nfunction Blog() {\r\n\r\n    const [questions, setQuestions] = useState([]);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        QuestionService.getQuestions()\r\n        .then( question => {\r\n            setQuestions(question)\r\n            console.log(question)\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        })\r\n    }, [])\r\n\r\n    function addMessage (questionId) {\r\n        QuestionService.addMessage(message, questionId)\r\n        .then(response => console.log(response))\r\n        window.location.reload();\r\n    }\r\n    \r\n    function deleteMessage (questionId, messageId) {\r\n        QuestionService.deleteMessage(questionId, messageId)\r\n        .then(response => {console.log(response)})\r\n        window.location.reload();\r\n    }\r\n\r\n    function updateCommentCmd (userID, question, message) {\r\n        let userId = localStorage.getItem(\"UserID\");\r\n\r\n        if(userId == userID)\r\n        {\r\n            return (\r\n                <div className=\"d-flex align-items-center justify-content-end\">\r\n                    <button className=\"btn btn-danger\" onClick={() => deleteMessage(question, message.messageID)}>&#10006;</button>\r\n                    <UpdateMessage message={message}\r\n                                    question={question}/>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    function deleteQuestionBtn (userId, questionId) {\r\n        if(localStorage.getItem(\"UserID\") == userId)\r\n        {\r\n            return (\r\n                <div className=\"d-flex align-items-center justify-content-end\">\r\n                    <button className=\"btn btn-danger\" onClick={() => deleteQuestion(questionId)}>Delete</button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    function deleteQuestion(questionId) {\r\n        QuestionService.deleteQuestion(questionId)\r\n    }\r\n\r\n    return (\r\n        <div style={{margin:\"50px\"}}>\r\n            <h1 className=\"text-center\">Pitajte nase zaposlene</h1>\r\n            <div className=\"blog-div\">\r\n                <AddQuestion/>\r\n            </div>\r\n            {questions.map(question => {\r\n                return (<Accordion>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Accordion.Toggle as={Button} eventKey={question.questionID}>\r\n                                {question.theme}\r\n                            </Accordion.Toggle>\r\n                            {deleteQuestionBtn(question.user.userID, question.questionID)}\r\n                        </Card.Header>\r\n                        <Accordion.Collapse eventKey={question.questionID}>\r\n                            <Card.Body>\r\n                                <ListGroup variant=\"flush\">\r\n                                {question.messages.map(message => {\r\n                                    if(message.user == null)\r\n                                    {\r\n                                        return <p></p>\r\n                                    }\r\n                                    else {\r\n                                        return (\r\n                                            <ListGroup.Item key={message.messageID}>\r\n                                            <h5 style={{marginBottom:0}}>{message.user.name} {message.user.surname}</h5>\r\n                                            <p style={{opacity:\"0.5\", marginTop:\"0\"}}>{DateTimeUtility.formatDate(message.date)}</p>\r\n                                            <p>{message.messageText}</p>\r\n                                            {updateCommentCmd(message.user.userID, question.questionID, message)}\r\n                                        </ListGroup.Item>\r\n                                        )\r\n                                    }\r\n                                })}\r\n                                    {UserUtility.isLoggedIn()? \r\n                                    <div><h4>Leave a comment</h4> \r\n                                        <textarea cols=\"30\" rows=\"5\" className=\"form-control\" onChange={e => setMessage(e.target.value)}></textarea>\r\n                                        <div className=\"form-group\" style={{marginTop: \"10px\"}}> \r\n                                        <button type=\"button\" className=\"btn btn-outline-dark mt-auto\" onClick={() => addMessage(question.questionID)}>Post Comment</button> \r\n                                        </div>\r\n                                    </div> : <p></p>}\r\n                                \r\n                                </ListGroup>\r\n                            </Card.Body>\r\n                        </Accordion.Collapse>\r\n                    </Card>\r\n                </Accordion>)\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Blog","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\components\\Nav.js",["213","214","215","216","217"],[],"import {React, useEffect, useState} from 'react'\r\nimport ReactRoutes from '../config/ReactRoutes'\r\nimport UserUtility from '../utility/UserUtility'\r\nimport LoginService from '../services/LoginService'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport ProductCategoryService from '../services/ProductCategoryService'\r\nimport PplCategoryService from '../services/PplCategoryService'\r\n\r\nfunction Nav({numberOfCartItems, cartTotalAmount}) {\r\n\r\n    const[productCategories, setProductCategories] = useState([])\r\n    const[pplCategories, setPplCategories] = useState([])\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(()=>{\r\n        Promise.all([\r\n          ProductCategoryService.getCategores(),\r\n          PplCategoryService.getPpls() \r\n      ])\r\n      .then(([productCategories,pplCategories]) => {\r\n          setProductCategories(productCategories)\r\n          setPplCategories(pplCategories)\r\n      })\r\n      .catch(error => {\r\n          console.log(error)\r\n      })\r\n      },[])\r\n    \r\n    const logOutBtn = () => {\r\n        LoginService.logOut()\r\n        navigate(ReactRoutes.HOME)\r\n    }\r\n\r\n    const loginRegister = ()=> {\r\n        if(!UserUtility.isLoggedIn()) {\r\n            return(   <ul className=\"nav\">\r\n                        <li className=\"nav-item\"><Link className=\"nav-link link-dark px-2\" to={ReactRoutes.LOGIN}>Login</Link></li>\r\n                        <li className=\"nav-item\"><Link className=\"nav-link link-dark px-2\" to={ReactRoutes.REGISTER}>Sign up</Link></li>\r\n                    </ul>\r\n                    )\r\n\r\n        }\r\n        else \r\n        {\r\n            return (\r\n                <form className=\"d-flex\">\r\n                    {UserUtility.isEmployee()? <p></p> : <Link to={ReactRoutes.CART} className=\"btn btn-outline-dark\">\r\n                        <i className=\"bi-cart-fill me-1\"></i>\r\n                        Korpa\r\n                        <span className=\"badge bg-dark text-white ms-1 rounded-pill\">{numberOfCartItems}</span>\r\n                        <span className=\"badge bg-dark text-white ms-1 rounded-pill\">{cartTotalAmount} rsd</span> \r\n                    </Link>}\r\n                    <div className=\"dropdown text-end\">\r\n                        <a className=\"d-block link-dark text-decoration-none dropdown-toggle\" id=\"dropdownUser1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                        <img src=\"/Assets/img/profileIcon.png\" alt=\"mdo\" width=\"32\" height=\"32\" className=\"rounded-circle\" />\r\n                        </a>\r\n                        <ul className=\"dropdown-menu text-small\" aria-labelledby=\"dropdownUser1\">\r\n                            <li><Link className=\"dropdown-item\" to={ReactRoutes.ACCOUNT}>Settings</Link></li>\r\n                            <li><Link className=\"dropdown-item\" to={ReactRoutes.MY_ORDERS}>\r\n                                {(UserUtility.isEmployee()? <p style={{margin:\"0\"}}>Orders</p> : <p style={{margin:\"0\"}}>My Orders</p>)}</Link></li>\r\n                            <li><hr className=\"dropdown-divider\"/></li>\r\n                            <li><a className=\"dropdown-item\" onClick={() => logOutBtn()}>Sign out</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </form>\r\n            )\r\n        }\r\n    }\r\n\r\n \r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <div className=\"container px-4 px-lg-5\">\r\n            <Link className=\"navbar-brand\" to={ReactRoutes.HOME}>Butik Kaja</Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><span className=\"navbar-toggler-icon\"></span></button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0 ms-lg-4\">\r\n                    <li className=\"nav-item\"><Link className=\"nav-link active\" to={ReactRoutes.HOME}>Home</Link></li>\r\n                    <li className=\"nav-item\"><Link className=\"nav-link\" to={ReactRoutes.BLOG}>Blog</Link></li>\r\n                    <li className=\"nav-item dropdown\">\r\n                        <a className=\"nav-link dropdown-toggle\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Kategorije</a>\r\n                        <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                            {productCategories.map(category => {\r\n                                return <li key={\"prodCat\" + category.productCategoryID}><Link className=\"dropdown-item\" to={\"/category/\" + category.productCategoryID}>{category.name}</Link></li>\r\n                            })}\r\n                        </ul>\r\n                    </li>\r\n                    <li className=\"nav-item dropdown\">\r\n                        <a className=\"nav-link dropdown-toggle\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Za</a>\r\n                        <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                            {pplCategories.map(category => {\r\n                                return <li><a className=\"dropdown-item\" key={\"pplCat\" + category.pplCategoryID} >{category.name}</a></li>\r\n                            })}\r\n                        </ul>\r\n                    </li>\r\n                </ul>        \r\n                    {loginRegister()}\r\n            </div>\r\n        </div>\r\n    </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\components\\Header.js",[],[],"C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\components\\ProductList.js",[],[],"C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\components\\HomeSlider.js",[],[],"C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\services\\RegisterService.js",["218","219"],[],"import ApiRoutes from \"../config/ApiRoutes\"\r\n\r\nexport const RegisterService = {\r\n    register: function(name, surname, email, username, password) {\r\n        return new Promise((resolve, reject) => {\r\n            let requestBody = {\r\n                Name: name, \r\n                Surname: surname,\r\n                Email: email,\r\n                Username: username,\r\n                Password: password\r\n              }\r\n\r\n            fetch(ApiRoutes.REGISTER, {\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: \"POST\",\r\n                body: JSON.stringify(requestBody)\r\n            })\r\n            .then(response => {\r\n                if (response.status == 400) {\r\n                    reject(\"Morate popuniti sva polja!\")\r\n                }\r\n\r\n                if (response.status == 409) {\r\n                    reject(\"Korisnik sa istom Email adresom vec postoji\")\r\n                }\r\n                return response.json()\r\n            })\r\n            .then(data => resolve(data))\r\n            .catch(error => reject(error))\r\n\r\n        })\r\n    }\r\n}\r\n\r\nexport default RegisterService","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\services\\OrderService.js",[],[],"C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\services\\ProductCategoryService.js",[],[],"C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\services\\ProductService.js",[],[],"C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\services\\LoginService.js",["220","221"],[],"import ApiRoutes from \"../config/ApiRoutes\"\r\nimport ReactRoues from '../config/ReactRoutes'\r\n\r\nexport const LoginService = {\r\n\r\n    logIn: function(email, password) {\r\n        return new Promise((resolve, reject) => {\r\n            let requestBody = {\r\n                email: email,\r\n                password: password\r\n              }\r\n\r\n            fetch(ApiRoutes.LOGIN, {\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: \"POST\",\r\n                body: JSON.stringify(requestBody)\r\n            })\r\n            .then(response => {\r\n                if(response.status == 400) {\r\n                    reject(\"Morate popuniti sva polja\")\r\n                }\r\n\r\n                if(response.status == 404) {\r\n                    reject(\"Neispravni podaci\")\r\n                }\r\n                return response.json()\r\n            })\r\n            .then(data => resolve(data))\r\n            .catch(error => reject(error))\r\n\r\n        })\r\n    },\r\n\r\n    logOut: function() {\r\n        localStorage.clear();\r\n        window.location.href = ReactRoues.HOME\r\n       // window.location.reload()\r\n    }\r\n}\r\n\r\nexport default LoginService\r\n","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\services\\PplCategoryService.js",[],[],"C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\services\\QuestionService.js",[],[],"C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\services\\ReviewService.js",[],[],"C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\services\\UserService.js",[],[],"C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\utility\\UserUtility.js",[],[],"C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\utility\\DateTimeUtility.js",[],[],"C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\components\\Modals\\DeleteReview.js",["222"],[],"import React, { useState } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { useNavigate } from \"react-router\";\r\nimport ReviewService from \"../../services/ReviewService\";\r\n\r\n\r\nfunction DeleteReview (props) {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const deleteReview = () => {\r\n        ReviewService.deleteReview(props.review.reviewID, props.productId)\r\n        .then(response => {\r\n            console.log(response)\r\n            // navigate('/product/' + props.productId)\r\n            window.location.reload()\r\n        })\r\n    }\r\n  return (\r\n    <div>\r\n      <Button variant=\"danger\" onClick={handleShow}>\r\n        Brisanje\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose} animation={false}>\r\n        <Modal.Header>\r\n          <Modal.Title>Brisanje recenzije</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Da li ste stigurni da zelite da izbrisete recenziju?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={deleteReview}>\r\n            Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeleteReview","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\components\\Modals\\UpdateReview.js",[],[],"C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\components\\Modals\\DeleteAccount.js",[],[],"C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\components\\Modals\\UpdateMessage.js",["223"],[],"import React, { useState } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { useNavigate } from \"react-router\";\r\nimport QuestionService from \"../../services/QuestionService\";\r\n\r\nfunction UpdateMessage (props) {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [messageText, setMessageText] = useState(props.message.messageText)\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    function updateMessage () {\r\n        QuestionService.updateMessage(props.question, props.message.messageID, messageText)   \r\n    }\r\n\r\n    return (\r\n        <div>\r\n             <Button variant=\"btn btn-success\" onClick={handleShow}>\r\n               Izmeni\r\n            </Button>\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header >\r\n                <Modal.Title>Izmeni poruku</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"form-label-group\">\r\n                        <input type=\"text\" id=\"inputName\" className=\"form-control\" value={messageText} onChange={e => setMessageText(e.target.value)} placeholder=\"Name\" required autoFocus/>           \r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={updateMessage}>\r\n                    Save Changes\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateMessage","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\components\\Modals\\AddQuestion.js",[],[],"C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\components\\Card.js",[],[],"C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\config\\ApiRoutes.js",[],[],"C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\components\\Modals\\AddProduct.js",["224","225"],[],"import React, { useState } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport ProductService from \"../../services/ProductService\";\r\nimport { useNavigate } from \"react-router\";\r\nimport FileUtility from \"../../utility/FileUtility\"\r\nimport Select from 'react-select'\r\n\r\nfunction AddProduct(props) {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [price, setPrice] = useState(0);\r\n    const [amount, setAmount] = useState(0);\r\n    const [image, setImage] = useState(null);\r\n    const [category, setCategory] = useState(null);\r\n    const [pplCategories, setPplCategories] = useState([])\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const addProduct = () => {\r\n        FileUtility.convertToBase64(image)\r\n            .then(imageAsBase64 => {\r\n                ProductService.addProduct(name, price, amount, imageAsBase64, category.productCategoryID, pplCategories)\r\n                    .then(response => {\r\n                        navigate(\"/category/\" + category.productCategoryID)\r\n                        window.location.reload()\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error)\r\n                    })\r\n            })\r\n            .catch(console.error)\r\n    }\r\n\r\n    const preparePplCategories = () => {\r\n        let selectArray = []\r\n\r\n        props.pplCategories.forEach(pplCategory => {\r\n            selectArray.push({\r\n                value: pplCategory.pplCategoryID,\r\n                label: pplCategory.name\r\n            })\r\n        })\r\n\r\n        return selectArray\r\n    }\r\n\r\n    const changePplCategories = e => {\r\n        let tmpPplCategories = []\r\n\r\n        e.forEach(pplCategory => {\r\n            tmpPplCategories.push(pplCategory.value)\r\n        })\r\n\r\n        setPplCategories(tmpPplCategories)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n             <Button variant=\"light\" onClick={handleShow}>\r\n               Dodaj proizvod\r\n            </Button>\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header >\r\n                <Modal.Title>Dodaj novi proizvod</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"form-label-group\">\r\n                        <label htmlFor=\"inputName\">Name</label>\r\n                        <input type=\"text\" id=\"inputName\" onChange={e => setName(e.target.value)} className=\"form-control\" placeholder=\"Name\" required autoFocus/>\r\n                        \r\n                    </div>\r\n                    <div className=\"form-label-group\">\r\n                        <label htmlFor=\"inputPrice\">Price</label>\r\n                        <input type=\"number\" id=\"inputPrice\" onChange={e => setPrice(e.target.value)} className=\"form-control\" placeholder=\"Price\" required/>\r\n                        \r\n                    </div>\r\n                    <div className=\"form-label-group\">\r\n                        <label htmlFor=\"inputAmount\">Amount</label>\r\n                        <input type=\"number\" id=\"inputAmount\" onChange={e => setAmount(e.target.value)} className=\"form-control\" placeholder=\"Amount\" required/>\r\n                       \r\n                    </div>\r\n                    <div className=\"form-label-group my-3\">\r\n                        <label>Slika</label>\r\n                        <input type=\"file\" onChange={e => setImage(e.target.files[0])} className=\"form-control\" required/>\r\n                       \r\n                    </div>\r\n                    <div className=\"my-3\">\r\n                        <label>Za vrste zivotinja</label>\r\n                        <Select isMulti options={preparePplCategories()} onChange={changePplCategories} />\r\n                    </div>\r\n                    <div className=\"nav-item dropdown\">\r\n                        <a className=\"nav-link dropdown-toggle\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Kategorija</a>\r\n                        <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                            {props.categories.map(category => {\r\n                                return <li><a onClick={()=>setCategory(category)} className=\"dropdown-item\" key={category.productCategoryID}>{category.name}</a></li>\r\n                            })}\r\n                        </ul>\r\n                        <p style={{marginLeft:\"15px\"}}>{(category!==null)? category.name : \"\"}</p>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={addProduct}>\r\n                    Save Changes\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddProduct;","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\components\\Modals\\DeleteProduct.js",[],[],"C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\components\\Modals\\UpdateProduct.js",["226","227","228","229"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport ProductService from \"../../services/ProductService\";\r\nimport { useNavigate } from \"react-router\";\r\nimport FileUtility from \"../../utility/FileUtility\"\r\nimport Select from 'react-select'\r\n\r\nfunction UpdateProduct (props) {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [name, setName] = useState(props.product.name);\r\n    const [price, setPrice] = useState(props.product.price);\r\n    const [amount, setAmount] = useState(props.product.amount);\r\n    const [image, setImage] = useState(props.product.image);\r\n    const [category, setCategory] = useState(props.product.productCategory.productCategoryID);\r\n    const [pplCategoriesFromProduct, setPplCategoriesFromProduct] = useState(props.product.pplCategories)\r\n    const [pplCategories, setPplCategories] = useState([])\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const updateProduct = () => {\r\n        FileUtility.convertToBase64(typeof(image) === \"string\" ? null : image)\r\n            .then(imageAsBase64 => {\r\n                ProductService.updateProduct(props.product.productID, name, price, amount, typeof(image) === \"string\" ? image : imageAsBase64, category, pplCategories)\r\n                    .then(response => {\r\n                        navigate(\"/category/\" + category)\r\n                        window.location.reload()\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error)\r\n                    })\r\n            })\r\n            .catch(console.error)\r\n    }\r\n\r\n    const preparePplCategories = () => {\r\n        let selectArray = []\r\n\r\n        props.pplCategories.forEach(pplCategory => {\r\n            selectArray.push({\r\n                value: pplCategory.pplCategoryID,\r\n                label: pplCategory.name\r\n            })\r\n        })\r\n\r\n        return selectArray\r\n    }\r\n\r\n    const prepareSelectedPplCategories = () => {\r\n        return pplCategoriesFromProduct.map(pplCat => {\r\n            return {\r\n                value: pplCat.pplCategoryID,\r\n                label: pplCat.name\r\n            }\r\n        })\r\n    }\r\n\r\n    const changePplCategories = e => {\r\n        let tmpPplCategories = []\r\n\r\n        e.forEach(pplCategory => {\r\n            tmpPplCategories.push(pplCategory.value)\r\n        })\r\n\r\n        setPplCategories(tmpPplCategories)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n             <Button variant=\"success\" onClick={handleShow}>\r\n               Izmeni\r\n            </Button>\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header >\r\n                <Modal.Title>Izmeni proizvod</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"form-label-group\">\r\n                        <label htmlFor=\"inputName\">Naziv</label>\r\n                        <input type=\"text\" id=\"inputName\" onChange={e => setName(e.target.value)} value={name} className=\"form-control\" placeholder=\"Name\" required autoFocus/>           \r\n                    </div>\r\n                    <div className=\"form-label-group\">\r\n                        <label htmlFor=\"inputPrice\">Cena</label>\r\n                        <input type=\"number\" id=\"inputPrice\" onChange={e => setPrice(e.target.value)} value={price} className=\"form-control\" placeholder=\"Price\" required autoFocus/>\r\n                    </div>\r\n                    <div className=\"form-label-group\">\r\n                        <label htmlFor=\"inputAmount\">Kolicina</label>\r\n                        <input type=\"number\" id=\"inputAmount\" onChange={e => setAmount(e.target.value)} value={amount} className=\"form-control\" placeholder=\"Amount\" required autoFocus/>\r\n                    </div>\r\n                    <div className=\"form-label-group my-3\">\r\n                        <label>Slika</label>\r\n                        <input type=\"file\" onChange={e => setImage(e.target.files[0] ?? null)} className=\"form-control\" required/>\r\n                       \r\n                    </div>\r\n                    <div className=\"my-3\">\r\n                        <label>Za vrste zivotinja</label>\r\n                        <Select isMulti defaultValue={prepareSelectedPplCategories()} options={preparePplCategories()} onChange={changePplCategories} />\r\n                    </div>\r\n                    <div className=\"nav-item dropdown\">\r\n                        <a className=\"nav-link dropdown-toggle\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Kategorija</a>\r\n                        <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                            {props.categories.map(category => {\r\n                                return <li><a onClick={()=>setCategory(category.productCategoryID)} className=\"dropdown-item\" key={category.productCategoryID}>{category.name}</a></li>\r\n                            })}\r\n                        </ul>\r\n                        <p style={{marginLeft:\"15px\"}}>{(category!==null)? category.name : \"\"}</p>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={updateProduct}>\r\n                    Save Changes\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateProduct","C:\\Users\\mmaksimovic\\Desktop\\ERP\\it102019erp\\erp-front\\src\\utility\\FileUtility.js",[],[],{"ruleId":"230","severity":1,"message":"231","line":75,"column":34,"nodeType":"232","messageId":"233","endLine":75,"endColumn":36},{"ruleId":"234","severity":1,"message":"235","line":23,"column":7,"nodeType":"236","endLine":23,"endColumn":9,"suggestions":"237"},{"ruleId":"238","severity":1,"message":"239","line":74,"column":26,"nodeType":"240","endLine":74,"endColumn":189},{"ruleId":"230","severity":1,"message":"241","line":59,"column":26,"nodeType":"232","messageId":"233","endLine":59,"endColumn":28},{"ruleId":"234","severity":1,"message":"242","line":36,"column":8,"nodeType":"236","endLine":36,"endColumn":10,"suggestions":"243"},{"ruleId":"244","severity":1,"message":"245","line":95,"column":38,"nodeType":"246","messageId":"247","endLine":95,"endColumn":39},{"ruleId":"230","severity":1,"message":"231","line":40,"column":19,"nodeType":"232","messageId":"233","endLine":40,"endColumn":21},{"ruleId":"230","severity":1,"message":"231","line":53,"column":43,"nodeType":"232","messageId":"233","endLine":53,"endColumn":45},{"ruleId":"238","severity":1,"message":"239","line":54,"column":25,"nodeType":"240","endLine":54,"endColumn":162},{"ruleId":"238","severity":1,"message":"239","line":62,"column":33,"nodeType":"240","endLine":62,"endColumn":90},{"ruleId":"238","severity":1,"message":"239","line":81,"column":25,"nodeType":"240","endLine":81,"endColumn":147},{"ruleId":"238","severity":1,"message":"239","line":89,"column":25,"nodeType":"240","endLine":89,"endColumn":147},{"ruleId":"238","severity":1,"message":"239","line":92,"column":44,"nodeType":"240","endLine":92,"endColumn":114},{"ruleId":"230","severity":1,"message":"231","line":23,"column":37,"nodeType":"232","messageId":"233","endLine":23,"endColumn":39},{"ruleId":"230","severity":1,"message":"231","line":27,"column":37,"nodeType":"232","messageId":"233","endLine":27,"endColumn":39},{"ruleId":"230","severity":1,"message":"231","line":22,"column":36,"nodeType":"232","messageId":"233","endLine":22,"endColumn":38},{"ruleId":"230","severity":1,"message":"231","line":26,"column":36,"nodeType":"232","messageId":"233","endLine":26,"endColumn":38},{"ruleId":"248","severity":1,"message":"249","line":14,"column":11,"nodeType":"250","messageId":"251","endLine":14,"endColumn":19},{"ruleId":"248","severity":1,"message":"249","line":9,"column":11,"nodeType":"250","messageId":"251","endLine":9,"endColumn":19},{"ruleId":"238","severity":1,"message":"239","line":98,"column":25,"nodeType":"240","endLine":98,"endColumn":147},{"ruleId":"238","severity":1,"message":"239","line":101,"column":44,"nodeType":"240","endLine":101,"endColumn":142},{"ruleId":"248","severity":1,"message":"252","line":1,"column":17,"nodeType":"250","messageId":"251","endLine":1,"endColumn":26},{"ruleId":"248","severity":1,"message":"253","line":18,"column":38,"nodeType":"250","messageId":"251","endLine":18,"endColumn":65},{"ruleId":"238","severity":1,"message":"239","line":105,"column":25,"nodeType":"240","endLine":105,"endColumn":147},{"ruleId":"238","severity":1,"message":"239","line":108,"column":44,"nodeType":"240","endLine":108,"endColumn":160},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'orders' and 'userId'. Either include them or remove the dependency array.","ArrayExpression",["254"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'userID'. Either include it or remove the dependency array.",["255"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-unused-vars","'navigate' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'setPplCategoriesFromProduct' is assigned a value but never used.",{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},"Update the dependencies array to be: [orders, userId]",{"range":"260","text":"261"},"Update the dependencies array to be: [userID]",{"range":"262","text":"263"},[653,655],"[orders, userId]",[1163,1165],"[userID]"]