{"ast":null,"code":"import ApiRoutes from \"../config/ApiRoutes\";\nimport ReactRoues from '../config/ReactRoutes';\nexport const LoginService = {\n  logIn: function (email, password) {\n    return new Promise((resolve, reject) => {\n      let requestBody = {\n        email: email,\n        password: password\n      };\n      fetch(ApiRoutes.LOGIN, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: \"POST\",\n        body: JSON.stringify(requestBody)\n      }).then(response => {\n        if (response.status == 400) {\n          reject(\"Morate popuniti sva polja\");\n        }\n        if (response.status == 404) {\n          reject(\"Neispravni podaci\");\n        }\n        return response.json();\n      }).then(data => resolve(data)).catch(error => reject(error));\n    });\n  },\n  logOut: function () {\n    localStorage.clear();\n    window.location.href = ReactRoues.HOME;\n    // window.location.reload()\n  }\n};\n\nexport default LoginService;","map":{"version":3,"names":["ApiRoutes","ReactRoues","LoginService","logIn","email","password","Promise","resolve","reject","requestBody","fetch","LOGIN","headers","method","body","JSON","stringify","then","response","status","json","data","catch","error","logOut","localStorage","clear","window","location","href","HOME"],"sources":["C:/Users/mmaksimovic/Desktop/ERP/it102019erp/erp-front/src/services/LoginService.js"],"sourcesContent":["import ApiRoutes from \"../config/ApiRoutes\"\r\nimport ReactRoues from '../config/ReactRoutes'\r\n\r\nexport const LoginService = {\r\n\r\n    logIn: function(email, password) {\r\n        return new Promise((resolve, reject) => {\r\n            let requestBody = {\r\n                email: email,\r\n                password: password\r\n              }\r\n\r\n            fetch(ApiRoutes.LOGIN, {\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: \"POST\",\r\n                body: JSON.stringify(requestBody)\r\n            })\r\n            .then(response => {\r\n                if(response.status == 400) {\r\n                    reject(\"Morate popuniti sva polja\")\r\n                }\r\n\r\n                if(response.status == 404) {\r\n                    reject(\"Neispravni podaci\")\r\n                }\r\n                return response.json()\r\n            })\r\n            .then(data => resolve(data))\r\n            .catch(error => reject(error))\r\n\r\n        })\r\n    },\r\n\r\n    logOut: function() {\r\n        localStorage.clear();\r\n        window.location.href = ReactRoues.HOME\r\n       // window.location.reload()\r\n    }\r\n}\r\n\r\nexport default LoginService\r\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,qBAAqB;AAC3C,OAAOC,UAAU,MAAM,uBAAuB;AAE9C,OAAO,MAAMC,YAAY,GAAG;EAExBC,KAAK,EAAE,SAAAA,CAASC,KAAK,EAAEC,QAAQ,EAAE;IAC7B,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACpC,IAAIC,WAAW,GAAG;QACdL,KAAK,EAAEA,KAAK;QACZC,QAAQ,EAAEA;MACZ,CAAC;MAEHK,KAAK,CAACV,SAAS,CAACW,KAAK,EAAE;QACnBC,OAAO,EAAE;UACL,QAAQ,EAAE,kBAAkB;UAC5B,cAAc,EAAE;QACpB,CAAC;QACDC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,WAAW;MACpC,CAAC,CAAC,CACDQ,IAAI,CAACC,QAAQ,IAAI;QACd,IAAGA,QAAQ,CAACC,MAAM,IAAI,GAAG,EAAE;UACvBX,MAAM,CAAC,2BAA2B,CAAC;QACvC;QAEA,IAAGU,QAAQ,CAACC,MAAM,IAAI,GAAG,EAAE;UACvBX,MAAM,CAAC,mBAAmB,CAAC;QAC/B;QACA,OAAOU,QAAQ,CAACE,IAAI,CAAC,CAAC;MAC1B,CAAC,CAAC,CACDH,IAAI,CAACI,IAAI,IAAId,OAAO,CAACc,IAAI,CAAC,CAAC,CAC3BC,KAAK,CAACC,KAAK,IAAIf,MAAM,CAACe,KAAK,CAAC,CAAC;IAElC,CAAC,CAAC;EACN,CAAC;EAEDC,MAAM,EAAE,SAAAA,CAAA,EAAW;IACfC,YAAY,CAACC,KAAK,CAAC,CAAC;IACpBC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG5B,UAAU,CAAC6B,IAAI;IACvC;EACH;AACJ,CAAC;;AAED,eAAe5B,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}