{"ast":null,"code":"import ApiRoutes from \"../config/ApiRoutes\";\nexport const ProductService = {\n  getProducts: function () {\n    return new Promise((resolve, reject) => {\n      fetch(ApiRoutes.PRODUCT, {\n        method: \"GET\"\n      }).then(response => {\n        return response.json();\n      }).then(data => resolve(data)).catch(error => reject(error));\n    });\n  },\n  getProductByID: function (productId) {\n    return new Promise((resolve, reject) => {\n      fetch(ApiRoutes.PRODUCT + productId, {\n        method: \"GET\"\n      }).then(response => {\n        return response.json();\n      }).then(data => resolve(data)).then(error => reject(error));\n    });\n  },\n  getProductByCategory: function (category) {\n    return new Promise((resolve, reject) => {\n      fetch(ApiRoutes.PRODUCT_BY_CATEGORY + category, {\n        method: \"GET\"\n      }).then(response => {\n        return response.json();\n      }).then(data => resolve(data)).catch(error => reject(error));\n    });\n  },\n  addProduct: function (name, price, amount, image, category, pplCategories) {\n    return new Promise((resolve, reject) => {\n      let requestBody = {\n        Name: name,\n        Price: price,\n        Amount: amount,\n        Image: image,\n        ProductCategory: category,\n        PplCategories: pplCategories\n      };\n      let jwt = localStorage.getItem(\"ButikShopJWT\");\n      fetch(ApiRoutes.PRODUCT, {\n        method: \"POST\",\n        headers: {\n          'Authorization': 'Bearer ' + jwt,\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      }).then(response => {\n        return response.json();\n      }).then(data => resolve(data)).catch(error => reject(error));\n    });\n  },\n  updateProduct: function (id, name, price, amount, image, category, pplCategories) {\n    return new Promise((resolve, reject) => {\n      let requestBody = {\n        Name: name,\n        Price: price,\n        Amount: amount,\n        Image: image,\n        ProductCategory: category,\n        PplCategories: pplCategories\n      };\n      let jwt = localStorage.getItem(\"ButikShopJWT\");\n      fetch(ApiRoutes.PRODUCT + id, {\n        method: \"PUT\",\n        headers: {\n          'Authorization': 'Bearer ' + jwt,\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      }).then(response => {\n        return response.json();\n      }).then(data => resolve(data)).catch(error => reject(error));\n    });\n  },\n  deleteProduct: function (id) {\n    return new Promise((resolve, reject) => {\n      let jwt = localStorage.getItem(\"ButikShopJWT\");\n      fetch(ApiRoutes.PRODUCT + id, {\n        method: \"DELETE\",\n        headers: {\n          'Authorization': 'Bearer ' + jwt,\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        return response.json();\n      }).then(data => resolve(data)).catch(error => reject(error));\n    });\n  }\n};\nexport default ProductService;","map":{"version":3,"names":["ApiRoutes","ProductService","getProducts","Promise","resolve","reject","fetch","PRODUCT","method","then","response","json","data","catch","error","getProductByID","productId","getProductByCategory","category","PRODUCT_BY_CATEGORY","addProduct","name","price","amount","image","pplCategories","requestBody","Name","Price","Amount","Image","ProductCategory","PplCategories","jwt","localStorage","getItem","headers","body","JSON","stringify","updateProduct","id","deleteProduct"],"sources":["C:/Users/mmaksimovic/Desktop/ERP/it102019erp/erp-front/src/services/ProductService.js"],"sourcesContent":["import ApiRoutes from \"../config/ApiRoutes\"\r\n\r\nexport const ProductService = {\r\n    getProducts: function() {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(ApiRoutes.PRODUCT, {\r\n                method: \"GET\"\r\n            })\r\n            .then(response => {\r\n                return response.json()\r\n            })\r\n            .then(data => resolve(data))\r\n            .catch(error => reject(error))\r\n\r\n        })\r\n    },\r\n\r\n    getProductByID: function(productId) {\r\n        return new Promise((resolve,reject) => {\r\n            fetch(ApiRoutes.PRODUCT + productId, {\r\n                method: \"GET\"\r\n            })\r\n            .then(response => {\r\n                return response.json()\r\n            })\r\n            .then(data => resolve(data))\r\n            .then(error => reject(error))\r\n        })\r\n    },\r\n\r\n    getProductByCategory: function(category) {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(ApiRoutes.PRODUCT_BY_CATEGORY + category, {\r\n                method: \"GET\"\r\n            })\r\n            .then(response => {\r\n                return response.json()\r\n            })\r\n            .then(data => resolve(data))\r\n            .catch(error => reject(error))\r\n        })\r\n    },\r\n\r\n    addProduct: function(name, price, amount, image, category, pplCategories) {\r\n        return new Promise((resolve, reject) => {\r\n            let requestBody = {\r\n                Name: name, \r\n                Price: price,\r\n                Amount: amount,\r\n                Image: image,\r\n                ProductCategory: category,\r\n                PplCategories: pplCategories\r\n              }\r\n              let jwt = localStorage.getItem(\"ButikShopJWT\");\r\n            fetch(ApiRoutes.PRODUCT, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + jwt,\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(requestBody)\r\n            })\r\n            .then(response => {\r\n                return response.json()\r\n            })\r\n            .then(data => resolve(data))\r\n            .catch(error => reject(error))\r\n        })\r\n    },\r\n\r\n    updateProduct: function(id,name, price, amount, image, category, pplCategories) {\r\n        return new Promise((resolve, reject) => {\r\n            let requestBody = {\r\n                Name: name, \r\n                Price: price,\r\n                Amount: amount,\r\n                Image: image,\r\n                ProductCategory: category,\r\n                PplCategories: pplCategories\r\n              }\r\n              let jwt = localStorage.getItem(\"ButikShopJWT\");\r\n            fetch(ApiRoutes.PRODUCT + id, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + jwt,\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(requestBody)\r\n            })\r\n            .then(response => {\r\n                return response.json()\r\n            })\r\n            .then(data => resolve(data))\r\n            .catch(error => reject(error))\r\n        })\r\n    },\r\n\r\n    deleteProduct: function(id) {\r\n        return new Promise((resolve, reject) => {\r\n            let jwt = localStorage.getItem(\"ButikShopJWT\");\r\n            fetch(ApiRoutes.PRODUCT + id, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + jwt,\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            .then(response => {\r\n                return response.json()\r\n            })\r\n            .then(data => resolve(data))\r\n            .catch(error => reject(error))\r\n        })\r\n    }\r\n}\r\n\r\nexport default ProductService\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}