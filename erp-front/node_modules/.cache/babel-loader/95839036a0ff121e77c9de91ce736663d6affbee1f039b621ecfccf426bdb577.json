{"ast":null,"code":"import ApiRoutes from \"../config/ApiRoutes\";\nexport const UserService = {\n  getUserByID: function (userId) {\n    return new Promise((resolve, reject) => {\n      fetch(ApiRoutes.USER + userId, {\n        method: \"GET\"\n      }).then(response => {\n        return response.json();\n      }).then(data => resolve(data)).catch(error => reject(error));\n    });\n  },\n  updateUser: function (id, name, surname, email, username, password) {\n    return new Promise((resolve, reject) => {\n      let requestBody = {\n        Name: name,\n        Surname: surname,\n        Email: email,\n        Username: username,\n        Password: password\n      };\n      let jwt = localStorage.getItem(\"ButikJWT\");\n      fetch(ApiRoutes.USER + id, {\n        method: \"PUT\",\n        headers: {\n          'Authorization': 'Bearer ' + jwt,\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      }).then(response => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          reject(\"Neispravni podaci\");\n        }\n      }).then(data => resolve(data)).catch(error => reject(error));\n    });\n  },\n  deleteUser: function (id) {\n    return new Promise((resolve, reject) => {\n      let jwt = localStorage.getItem(\"ButikJWT\");\n      fetch(ApiRoutes.USER + id, {\n        method: \"DELETE\",\n        headers: {\n          'Authorization': 'Bearer ' + jwt,\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        localStorage.clear();\n        return response.json();\n      }).then(data => resolve(data)).catch(error => reject(error));\n    });\n  }\n};\nexport default UserService;","map":{"version":3,"names":["ApiRoutes","UserService","getUserByID","userId","Promise","resolve","reject","fetch","USER","method","then","response","json","data","catch","error","updateUser","id","name","surname","email","username","password","requestBody","Name","Surname","Email","Username","Password","jwt","localStorage","getItem","headers","body","JSON","stringify","ok","deleteUser","clear"],"sources":["C:/Users/mmaksimovic/Desktop/ERP/it102019erp/erp-front/src/services/UserService.js"],"sourcesContent":["import ApiRoutes from \"../config/ApiRoutes\"\r\n\r\nexport const UserService = {\r\n    getUserByID: function(userId) {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(ApiRoutes.USER + userId, {\r\n                method: \"GET\"\r\n            })\r\n            .then(response => {\r\n                return response.json()\r\n            })\r\n            .then(data => resolve(data))\r\n            .catch(error => reject(error))\r\n\r\n        })\r\n    },\r\n\r\n    updateUser: function(id, name, surname, email, username, password) {\r\n        return new Promise((resolve, reject) => {\r\n            let requestBody = {\r\n                Name: name, \r\n                Surname: surname, \r\n                Email: email,\r\n                Username: username,\r\n                Password: password\r\n            }\r\n\r\n            let jwt = localStorage.getItem(\"ButikJWT\");\r\n\r\n            fetch(ApiRoutes.USER + id, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + jwt,\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(requestBody)\r\n            })\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response.json()\r\n                } else {\r\n                    reject(\"Neispravni podaci\")\r\n                }\r\n            })\r\n            .then(data => resolve(data))\r\n            .catch(error => reject(error))\r\n        })\r\n    },\r\n\r\n    deleteUser: function(id) {\r\n        return new Promise((resolve, reject) => {\r\n            let jwt = localStorage.getItem(\"ButikJWT\");\r\n            fetch(ApiRoutes.USER + id, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + jwt,\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            .then(response => {\r\n                localStorage.clear();\r\n                return response.json()\r\n            })\r\n            .then(data => resolve(data))\r\n            .catch(error => reject(error))\r\n\r\n        })\r\n    }\r\n}\r\n\r\nexport default UserService"],"mappings":"AAAA,OAAOA,SAAS,MAAM,qBAAqB;AAE3C,OAAO,MAAMC,WAAW,GAAG;EACvBC,WAAW,EAAE,SAAAA,CAASC,MAAM,EAAE;IAC1B,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACpCC,KAAK,CAACP,SAAS,CAACQ,IAAI,GAAGL,MAAM,EAAE;QAC3BM,MAAM,EAAE;MACZ,CAAC,CAAC,CACDC,IAAI,CAACC,QAAQ,IAAI;QACd,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;MAC1B,CAAC,CAAC,CACDF,IAAI,CAACG,IAAI,IAAIR,OAAO,CAACQ,IAAI,CAAC,CAAC,CAC3BC,KAAK,CAACC,KAAK,IAAIT,MAAM,CAACS,KAAK,CAAC,CAAC;IAElC,CAAC,CAAC;EACN,CAAC;EAEDC,UAAU,EAAE,SAAAA,CAASC,EAAE,EAAEC,IAAI,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;IAC/D,OAAO,IAAIlB,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACpC,IAAIiB,WAAW,GAAG;QACdC,IAAI,EAAEN,IAAI;QACVO,OAAO,EAAEN,OAAO;QAChBO,KAAK,EAAEN,KAAK;QACZO,QAAQ,EAAEN,QAAQ;QAClBO,QAAQ,EAAEN;MACd,CAAC;MAED,IAAIO,GAAG,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;MAE1CxB,KAAK,CAACP,SAAS,CAACQ,IAAI,GAAGS,EAAE,EAAE;QACvBR,MAAM,EAAE,KAAK;QACbuB,OAAO,EAAE;UACL,eAAe,EAAE,SAAS,GAAGH,GAAG;UAChC,QAAQ,EAAE,kBAAkB;UAC5B,cAAc,EAAE;QACpB,CAAC;QACDI,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,WAAW;MACpC,CAAC,CAAC,CACDb,IAAI,CAACC,QAAQ,IAAI;QACd,IAAIA,QAAQ,CAACyB,EAAE,EAAE;UACb,OAAOzB,QAAQ,CAACC,IAAI,CAAC,CAAC;QAC1B,CAAC,MAAM;UACHN,MAAM,CAAC,mBAAmB,CAAC;QAC/B;MACJ,CAAC,CAAC,CACDI,IAAI,CAACG,IAAI,IAAIR,OAAO,CAACQ,IAAI,CAAC,CAAC,CAC3BC,KAAK,CAACC,KAAK,IAAIT,MAAM,CAACS,KAAK,CAAC,CAAC;IAClC,CAAC,CAAC;EACN,CAAC;EAEDsB,UAAU,EAAE,SAAAA,CAASpB,EAAE,EAAE;IACrB,OAAO,IAAIb,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACpC,IAAIuB,GAAG,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;MAC1CxB,KAAK,CAACP,SAAS,CAACQ,IAAI,GAAGS,EAAE,EAAE;QACvBR,MAAM,EAAE,QAAQ;QAChBuB,OAAO,EAAE;UACL,eAAe,EAAE,SAAS,GAAGH,GAAG;UAChC,QAAQ,EAAE,kBAAkB;UAC5B,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC,CACDnB,IAAI,CAACC,QAAQ,IAAI;QACdmB,YAAY,CAACQ,KAAK,CAAC,CAAC;QACpB,OAAO3B,QAAQ,CAACC,IAAI,CAAC,CAAC;MAC1B,CAAC,CAAC,CACDF,IAAI,CAACG,IAAI,IAAIR,OAAO,CAACQ,IAAI,CAAC,CAAC,CAC3BC,KAAK,CAACC,KAAK,IAAIT,MAAM,CAACS,KAAK,CAAC,CAAC;IAElC,CAAC,CAAC;EACN;AACJ,CAAC;AAED,eAAed,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}