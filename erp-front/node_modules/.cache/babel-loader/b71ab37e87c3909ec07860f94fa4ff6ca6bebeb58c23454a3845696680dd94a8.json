{"ast":null,"code":"import ApiRoutes from \"../config/ApiRoutes\";\nexport const OrderService = {\n  getAllOrders: () => {\n    return new Promise((resolve, reject) => {\n      let jwt = localStorage.getItem(\"ButikShopJWT\");\n      fetch(ApiRoutes.ORDER, {\n        headers: {\n          'Authorization': 'Bearer ' + jwt,\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: \"GET\"\n      }).then(response => {\n        return response.json();\n      }).then(data => resolve(data)).catch(error => reject(error));\n    });\n  },\n  getAllOrdersForUser: userId => {\n    return new Promise((resolve, reject) => {\n      let jwt = localStorage.getItem(\"ButikShopJWT\");\n      fetch(ApiRoutes.ORDER + ApiRoutes.ORDER_BY_USER + userId, {\n        headers: {\n          'Authorization': 'Bearer ' + jwt,\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: \"GET\"\n      }).then(response => {\n        return response.json();\n      }).then(data => resolve(data)).catch(error => reject(error));\n    });\n  },\n  deleteOrder: orderId => {\n    return new Promise((resolve, reject) => {\n      let jwt = localStorage.getItem(\"ButikShopJWT\");\n      fetch(ApiRoutes.ORDER + orderId, {\n        headers: {\n          'Authorization': 'Bearer ' + jwt,\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: \"DELETE\"\n      }).then(response => {\n        return response.json();\n      }).then(data => resolve(data)).catch(error => reject(error));\n    });\n  },\n  makeOrder: cart => {\n    return new Promise((resolve, reject) => {\n      let requestBody = {\n        OrderItems: []\n      };\n      cart.forEach(orderItem => {\n        requestBody.OrderItems.push({\n          ProductID: orderItem.product.productID,\n          Amount: orderItem.amount\n        });\n      });\n      let jwt = localStorage.getItem(\"PetShopJWT\");\n      fetch(ApiRoutes.ORDER, {\n        headers: {\n          'Authorization': 'Bearer ' + jwt,\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: \"POST\",\n        body: JSON.stringify(requestBody)\n      }).then(response => {\n        return response.json();\n      }).then(data => resolve(data)).catch(error => reject(error));\n    });\n  }\n};","map":{"version":3,"names":["ApiRoutes","OrderService","getAllOrders","Promise","resolve","reject","jwt","localStorage","getItem","fetch","ORDER","headers","method","then","response","json","data","catch","error","getAllOrdersForUser","userId","ORDER_BY_USER","deleteOrder","orderId","makeOrder","cart","requestBody","OrderItems","forEach","orderItem","push","ProductID","product","productID","Amount","amount","body","JSON","stringify"],"sources":["C:/Users/mmaksimovic/Desktop/ERP/it102019erp/erp-front/src/services/OrderService.js"],"sourcesContent":["import ApiRoutes from \"../config/ApiRoutes\"\r\n\r\nexport const OrderService = {\r\n    getAllOrders: () => {\r\n        return new Promise((resolve, reject) => {\r\n            let jwt = localStorage.getItem(\"ButikShopJWT\");\r\n\r\n            fetch(ApiRoutes.ORDER, {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + jwt,\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: \"GET\"\r\n            })\r\n            .then(response => {\r\n                return response.json()\r\n            })\r\n            .then(data => resolve(data))\r\n            .catch(error => reject(error))\r\n        })\r\n    },\r\n\r\n    getAllOrdersForUser: (userId) => {\r\n        return new Promise((resolve, reject) => {\r\n            let jwt = localStorage.getItem(\"ButikShopJWT\");\r\n\r\n            fetch(ApiRoutes.ORDER + ApiRoutes.ORDER_BY_USER + userId, {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + jwt,\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: \"GET\"\r\n            })\r\n            .then(response => {\r\n                return response.json()\r\n            })\r\n            .then(data => resolve(data))\r\n            .catch(error => reject(error))\r\n        })\r\n    },\r\n\r\n    deleteOrder: (orderId) => {\r\n        return new Promise((resolve, reject) => {\r\n            let jwt = localStorage.getItem(\"ButikShopJWT\");\r\n\r\n            fetch(ApiRoutes.ORDER + orderId, {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + jwt,\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: \"DELETE\"\r\n            })\r\n            .then(response => {\r\n                return response.json()\r\n            })\r\n            .then(data => resolve(data))\r\n            .catch(error => reject(error))\r\n        })\r\n    },\r\n\r\n    makeOrder: (cart) => {\r\n        return new Promise((resolve, reject) => {\r\n            let requestBody = {\r\n                OrderItems: []\r\n            }\r\n\r\n            cart.forEach(orderItem => {\r\n                requestBody.OrderItems.push({\r\n                    ProductID: orderItem.product.productID,\r\n                    Amount: orderItem.amount\r\n                })\r\n            })\r\n\r\n            let jwt = localStorage.getItem(\"PetShopJWT\");\r\n\r\n            fetch(ApiRoutes.ORDER, {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + jwt,\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: \"POST\",\r\n                body: JSON.stringify(requestBody)\r\n            })\r\n            .then(response => {\r\n                return response.json()\r\n            })\r\n            .then(data => resolve(data))\r\n            .catch(error => reject(error))\r\n        })\r\n    }\r\n\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}